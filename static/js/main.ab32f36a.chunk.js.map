{"version":3,"sources":["components/CentreDiv/CentreDiv.tsx","components/Contact/Vishal_Ramanand_Sharma_Resume.pdf","components/Contact/Contact.tsx","components/Introduction/Introduction.tsx","ColorModeSwitcher.tsx","components/Navbar/Navbar.tsx","components/Projects/ProjectCard.tsx","components/Projects/ProjectsData.ts","components/Projects/Projects.tsx","components/Skills/SkillsData.ts","components/Skills/Skills.tsx","app/App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["CentreDiv","linkColor","useColorModeValue","backgroundColor","divColor","w","h","display","p","color","margin","transition","_hover","transform","alignItems","Contact","cssObj","width","flexDirection","py","mt","minHeight","id","as","size","marginBottom","m","flexWrap","maxW","my","mx","justifyContent","href","_after","background","content","height","target","resume","Introduction","marginY","ColorModeSwitcher","props","toggleColorMode","useColorMode","text","SwitchIcon","FaMoon","FaSun","fontSize","variant","marginLeft","onClick","icon","NavBar","useDisclosure","isOpen","onToggle","iconColor","bg","minH","base","px","borderBottom","borderStyle","borderColor","align","flex","md","ml","Close","Hamburger","justify","textAlign","useBreakpointValue","fontFamily","direction","spacing","justifySelf","in","animateOpacity","DesktopNav","linkHoverColor","NAV_ITEMS","map","navItem","fontWeight","label","MobileNav","MobileNavItem","children","Link","textDecoration","ChevronDownIcon","style","marginTop","pl","borderLeft","child","ProjectCard","githubLink","hostedLink","languages","projectDesc","projectName","bgBadge","boxShadow","rounded","lang","language","isExternal","ExternalLink","PROJECT_DATA","Projects","pt","data","index","key","SKILLS_ARRAY","Skills","skill","App","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ab32f36a.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Text, useColorModeValue } from '@chakra-ui/react';\nconst CentreDiv = (): React.ReactElement => {\n  const linkColor = useColorModeValue('gray.600', 'gray.200');\n  const backgroundColor = useColorModeValue('#1a202c', '#ffffff');\n  const divColor = useColorModeValue('#ffffff', '#1a202c');\n  return (\n    <Box w=\"100%\" h=\"600px\" display=\"flex\" backgroundColor={backgroundColor}>\n      <Box\n        w=\"200px\"\n        h=\"200px\"\n        p={4}\n        color={linkColor}\n        backgroundColor={divColor}\n        margin=\"auto\"\n        display=\"flex\"\n        transition={\n          '3s transform cubic-bezier(.155,1.105,.295,1.12),.3s box-shadow,.3s -webkit-transform cubic-bezier(.155,1.105,.295,1.12)'\n        }\n        _hover={{ transform: 'scale(1.1)' }}\n      >\n        <Text display=\"flex\" alignItems=\"center\" margin=\"auto\">\n          Here is a centered div.\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CentreDiv;\n","export default __webpack_public_path__ + \"static/media/Vishal_Ramanand_Sharma_Resume.6d24b4b8.pdf\";","import {\n  Box,\n  Button,\n  Flex,\n  Heading,\n  Link,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { LogoGithubIcon, LogoLinkedinIcon, MailIcon } from 'chakra-ui-ionicons';\nimport React from 'react';\nimport resume from './Vishal_Ramanand_Sharma_Resume.pdf';\n\nconst Contact = (): React.ReactElement => {\n  const backgroundColor = useColorModeValue('#ffffff', '#1a202c');\n  const divColor = useColorModeValue('#1a202c', '#ffffff');\n  const cssObj = {\n    width: '100%',\n  };\n  return (\n    <Box\n      w=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      backgroundColor={backgroundColor}\n      py=\"4\"\n      mt=\"0\"\n      minHeight=\"400px\"\n      id=\"contact\"\n    >\n      <Box>\n        <Heading\n          as=\"h3\"\n          size=\"xl\"\n          marginBottom=\"16px\"\n          m=\"auto\"\n          color={divColor}\n        >\n          Contact\n        </Heading>\n      </Box>\n      <Flex\n        flexWrap=\"wrap\"\n        maxW=\"600px\"\n        my=\"8\"\n        mx=\"auto\"\n        justifyContent=\"space-around\"\n      >\n        <Link\n          href=\"mailto:vishalsharma1907@gmail.com\"\n          mx=\"4\"\n          _after={{\n            transition: 'all ease-in-out .3s',\n            background: 'none repeat scroll 0 0 currentcolor',\n            content: '\"\"',\n            display: 'block',\n            height: '3px',\n            width: '0px',\n          }}\n          _hover={{ _after: cssObj }}\n        >\n          <MailIcon w={16} h={16} />\n        </Link>\n        <Link\n          href=\"https://github.com/vishals9711\"\n          mx=\"4\"\n          target=\"_blank\"\n          _after={{\n            transition: 'all ease-in-out .3s',\n            background: 'none repeat scroll 0 0 currentcolor',\n            content: '\"\"',\n            display: 'block',\n            height: '3px',\n            width: '0px',\n          }}\n          _hover={{ _after: cssObj }}\n        >\n          <LogoGithubIcon w={16} h={16} />\n        </Link>\n        <Link\n          href=\"https://www.linkedin.com/in/vishals9711/\"\n          mx=\"4\"\n          target=\"_blank\"\n          _after={{\n            transition: 'all ease-in-out .3s',\n            background: 'none repeat scroll 0 0 currentcolor',\n            content: '\"\"',\n            display: 'block',\n            height: '3px',\n            width: '0px',\n          }}\n          _hover={{ _after: cssObj }}\n        >\n          <LogoLinkedinIcon w={16} h={16} />\n        </Link>\n      </Flex>\n      <Flex justifyContent=\"center\" my={3} py={4}>\n        <Link\n          href={resume}\n          target=\"_blank\"\n          _after={{\n            transition: 'all ease-in-out .3s',\n            background: 'none repeat scroll 0 0 currentcolor',\n            content: '\"\"',\n            display: 'block',\n            height: '2px',\n            width: '0px',\n          }}\n          _hover={{ _after: cssObj }}\n        >\n          <Button size=\"lg\">Resume</Button>\n        </Link>\n      </Flex>\n\n      <Flex justifyContent=\"center\" my=\"4\">\n        <Heading as=\"h3\" size=\"lg\">\n          Created by Vishal Sharma\n        </Heading>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Contact;\n","import { Box, Container, Heading, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nconst Introduction = (): React.ReactElement => {\n  return (\n    <Box>\n      <Heading marginY=\"32px\" as=\"h1\" size=\"3xl\">\n        Hi, I am Vishal Sharma.\n      </Heading>\n      <Heading as=\"h3\" size=\"xl\" marginBottom=\"16px\">\n        A Full Stack Engineer.\n      </Heading>\n      <Container maxW=\"container.sm\">\n        <Text>\n          {`Experienced Senior Software Engineer with a demonstrated history of\n          working in the information technology and services industry. Currently\n          enrolled for the Master's program in Computer Science at San Francisco\n          State University.`}\n        </Text>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Introduction;\n","import * as React from 'react';\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n} from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, 'aria-label'>;\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  );\n};\n","import { ChevronDownIcon, CloseIcon, HamburgerIcon } from '@chakra-ui/icons';\nimport {\n  Box,\n  Collapse,\n  Flex,\n  Icon,\n  IconButton,\n  Link,\n  Stack,\n  Text,\n  useBreakpointValue,\n  useColorModeValue,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport { ColorModeSwitcher } from '../../ColorModeSwitcher';\n\ninterface NavItem {\n  label: string;\n  subLabel?: string;\n  children?: Array<NavItem>;\n  href?: string;\n}\n\nconst cssObj = {\n  width: '100%',\n};\n\nconst NavBar = (): React.ReactElement => {\n  const { isOpen, onToggle } = useDisclosure();\n  const iconColor = useColorModeValue('white', 'gray.600');\n  return (\n    <Box>\n      <Flex\n        bg={useColorModeValue('gray.800', 'white')}\n        color={useColorModeValue('white', 'gray.600')}\n        minH={'60px'}\n        py={{ base: 2 }}\n        px={{ base: 4 }}\n        borderBottom={1}\n        borderStyle={'solid'}\n        borderColor={useColorModeValue('gray.900', 'gray.200')}\n        align={'center'}\n      >\n        <Flex\n          flex={{ base: 1, md: 'auto' }}\n          ml={{ base: -2 }}\n          display={{ base: 'flex', md: 'none' }}\n        >\n          <IconButton\n            onClick={onToggle}\n            icon={\n              isOpen ? (\n                <CloseIcon w={3} h={3} color={iconColor} />\n              ) : (\n                <HamburgerIcon w={5} h={5} color={iconColor} />\n              )\n            }\n            variant={'ghost'}\n            aria-label={'Toggle Navigation'}\n          />\n        </Flex>\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\n          <Text\n            textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\n            fontFamily={'heading'}\n            color={useColorModeValue('white', 'gray.800')}\n          >\n            VS\n          </Text>\n\n          <Flex display={{ base: 'none', md: 'flex' }} ml={10}>\n            <DesktopNav />\n          </Flex>\n        </Flex>\n\n        <Stack\n          flex={{ base: 1, md: 0 }}\n          justify={'flex-end'}\n          direction={'row'}\n          spacing={6}\n        >\n          <ColorModeSwitcher justifySelf=\"flex-end\" />\n        </Stack>\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity>\n        <MobileNav />\n      </Collapse>\n    </Box>\n  );\n};\n\nexport default NavBar;\n\nconst DesktopNav = () => {\n  const linkColor = useColorModeValue('gray.200', 'gray.600');\n  const linkHoverColor = useColorModeValue('white', 'gray.800');\n\n  return (\n    <Stack direction={'row'} spacing={4}>\n      {NAV_ITEMS.map((navItem) => (\n        <Box key={navItem.label} height={'28px'}>\n          <Link\n            p={2}\n            href={navItem.href ?? '#'}\n            fontSize={'md'}\n            fontWeight={500}\n            color={linkColor}\n            _after={{\n              transition: 'all ease-in-out .3s',\n              background: `none repeat scroll 0 0 ${linkHoverColor}`,\n              content: '\"\"',\n              display: 'block',\n              height: '3px',\n              width: '0px',\n            }}\n            _hover={{ _after: cssObj }}\n          >\n            {navItem.label}\n          </Link>\n        </Box>\n      ))}\n    </Stack>\n  );\n};\n\nconst MobileNav = () => {\n  return (\n    <Stack\n      bg={useColorModeValue('gray.800', 'white')}\n      p={4}\n      display={{ md: 'none' }}\n    >\n      {NAV_ITEMS.map((navItem) => (\n        <MobileNavItem key={navItem.label} {...navItem} />\n      ))}\n    </Stack>\n  );\n};\n\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Stack spacing={4} onClick={children && onToggle}>\n      <Flex\n        py={2}\n        as={Link}\n        href={href ?? '#'}\n        justify={'space-between'}\n        align={'center'}\n        _hover={{\n          textDecoration: 'none',\n        }}\n      >\n        <Text\n          fontWeight={600}\n          color={useColorModeValue('gray.200', 'gray.600')}\n        >\n          {label}\n        </Text>\n        {children && (\n          <Icon\n            as={ChevronDownIcon}\n            transition={'all .25s ease-in-out'}\n            transform={isOpen ? 'rotate(180deg)' : ''}\n            w={6}\n            h={6}\n          />\n        )}\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\n        <Stack\n          mt={2}\n          pl={4}\n          borderLeft={1}\n          borderStyle={'solid'}\n          borderColor={useColorModeValue('gray.700', 'gray.200')}\n          align={'start'}\n        >\n          {children &&\n            children.map((child) => (\n              <Link key={child.label} py={2} href={child.href}>\n                {child.label}\n              </Link>\n            ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n};\n\nconst NAV_ITEMS: Array<NavItem> = [\n  {\n    label: 'Projects',\n    href: '#projects',\n  },\n  {\n    label: 'Skills',\n    href: '#skills',\n  },\n  {\n    label: 'Contact',\n    href: '#contact',\n  },\n];\n","import { ExternalLinkIcon } from '@chakra-ui/icons';\nimport {\n  Badge,\n  Box,\n  Center,\n  Heading,\n  Link,\n  Stack,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { LogoGithubIcon } from 'chakra-ui-ionicons';\nimport React from 'react';\nexport interface IProjectCard {\n  projectName: string;\n  projectDesc: string;\n  languages: Array<string>;\n  githubLink: string;\n  hostedLink?: string;\n}\n\nconst ProjectCard = (props: IProjectCard): React.ReactElement => {\n  const { githubLink, hostedLink, languages, projectDesc, projectName } = props;\n  const bgBadge = useColorModeValue('gray.50', 'gray.800');\n  const customBadge = (language: string) => (\n    <>\n      <Badge px={2} py={1} m=\"5\" bg={bgBadge} fontWeight={'400'}>\n        {language}\n      </Badge>\n    </>\n  );\n\n  return (\n    <Center py={6}>\n      <Box\n        maxW={'320px'}\n        w={'full'}\n        bg={useColorModeValue('white', 'gray.900')}\n        boxShadow={'2xl'}\n        rounded={'lg'}\n        p={6}\n        textAlign={'center'}\n        transition={\n          '3s transform cubic-bezier(.155,1.105,.295,1.12),.3s box-shadow,.3s -webkit-transform cubic-bezier(.155,1.105,.295,1.12)'\n        }\n        _hover={{\n          transform: 'scale(1.05)',\n        }}\n      >\n        <Heading fontSize={'2xl'} fontFamily={'body'} height=\"56px\">\n          {projectName}\n        </Heading>\n        <Text\n          textAlign={'center'}\n          color={useColorModeValue('gray.700', 'gray.400')}\n          px={3}\n          marginTop=\"1\"\n          fontSize=\"medium\"\n          height=\"144px\"\n        >\n          {projectDesc}\n        </Text>\n\n        <Stack\n          align={'center'}\n          justify={'center'}\n          direction={'row'}\n          mt={1}\n          flexWrap=\"wrap\"\n          height=\"92px\"\n        >\n          {languages.map((lang) => customBadge(lang))}\n        </Stack>\n\n        <Stack mt={8} direction={'row'} spacing={4} justifyContent=\"center\">\n          <Link href={githubLink} isExternal>\n            {' '}\n            <LogoGithubIcon w={7} h={7} />\n          </Link>\n          {hostedLink && (\n            <Link href={hostedLink} isExternal>\n              <ExternalLinkIcon w={7} h={7} />\n            </Link>\n          )}\n        </Stack>\n      </Box>\n    </Center>\n  );\n};\n\nexport default ProjectCard;\n","import { IProjectCard } from './ProjectCard';\n\nexport const PROJECT_DATA: Array<IProjectCard> = [\n  {\n    projectName: 'Vaccination Slot Alert',\n    projectDesc:\n      'A web portal that can create Vaccination slot Alerts in India and notify via email or Text SMS when slots open up.',\n    githubLink: 'https://github.com/vishals9711/cowin_notifier',\n    languages: ['ReactJS', 'Typescript', 'Firebase SDK', 'Twilio', 'AWS'],\n    hostedLink: 'https://vaccineslotalert.in/',\n  },\n  {\n    projectName: 'Food Reservation',\n    projectDesc:\n      'A PWA wherein people can reserve table at a restaurant, order food, pay bills thereby reducing contact and saving time for the restaurant and the customer.',\n    githubLink: 'https://github.com/vishals9711/FoodReservation',\n    languages: ['Ionic', 'ExpressJS', 'Typescript', 'MYSQL'],\n  },\n  {\n    projectName: 'Car Black Box',\n    projectDesc:\n      'A program that tracks the vitals of a vehicle which can be used for investagation incase of an accident, additionally can also be used as a speed enforcer.',\n    githubLink: 'https://github.com/vishals9711/black_box',\n    languages: ['Angular', 'Google Maps SDK', 'IBM Bluemix'],\n  },\n  {\n    projectName: 'Power, Energy and Machine Analyzer',\n    projectDesc:\n      'An all-in-one solution to monitor the electric grid & industrial machinery. This project done as part of Fellowship for Analog Devices (Anveshan)',\n    githubLink: 'https://github.com/vishals9711/Anveshan',\n    languages: ['Angular', 'Embedded C', 'IBM Bluemix'],\n  },\n];\n","import { Box, Flex, Heading } from '@chakra-ui/react';\nimport React from 'react';\nimport ProjectCard from './ProjectCard';\nimport { PROJECT_DATA } from './ProjectsData';\n\nconst Projects = (): React.ReactElement => {\n  return (\n    <Box\n      w=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      id=\"projects\"\n      mt=\"0\"\n      pt=\"8\"\n    >\n      <Box>\n        <Heading as=\"h3\" size=\"xl\" marginBottom=\"32px\" mx=\"auto\">\n          Projects\n        </Heading>\n      </Box>\n      <Flex justifyContent=\"space-around\" flexWrap=\"wrap\">\n        {PROJECT_DATA.map((data, index) => (\n          <ProjectCard {...data} key={index} />\n        ))}\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Projects;\n","export const SKILLS_ARRAY: Array<string> = [\n  'ReactJS',\n  'Angular',\n  'HTML/CSS',\n  'Python',\n  'TypeScript',\n  'JavaScript',\n  'SQL',\n  'React Native',\n  'Git',\n  'FireBase',\n  'IBM Bluemix',\n  'Docker',\n  'MySQL',\n  'Agile Workflows',\n];\n","import { Box, Heading, Flex, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\nimport { Badge } from '@chakra-ui/react';\nimport { SKILLS_ARRAY } from './SkillsData';\nconst Skills = (): React.ReactElement => {\n  const backgroundColor = useColorModeValue('#1a202c', '#ffffff');\n  const divColor = useColorModeValue('#ffffff', '#1a202c');\n\n  return (\n    <Box\n      w=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      backgroundColor={backgroundColor}\n      py=\"8\"\n      minH=\"400px\"\n      id=\"skills\"\n    >\n      <Box>\n        <Heading\n          as=\"h3\"\n          size=\"xl\"\n          marginBottom=\"16px\"\n          m=\"auto\"\n          color={divColor}\n        >\n          Skills\n        </Heading>\n      </Box>\n      <Flex justifyContent=\"space-around\" flexWrap=\"wrap\" maxW=\"800px\" m=\"auto\">\n        {SKILLS_ARRAY.map((skill, index) => (\n          <Badge\n            fontSize=\"0.8em\"\n            m=\"4\"\n            key={index}\n            color={divColor}\n            backgroundColor={backgroundColor}\n          >\n            {' '}\n            {skill}\n          </Badge>\n        ))}\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Skills;\n","import { Box, ChakraProvider, theme, VStack } from '@chakra-ui/react';\nimport * as React from 'react';\nimport CentreDiv from '../components/CentreDiv/CentreDiv';\nimport Contact from '../components/Contact/Contact';\nimport Introduction from '../components/Introduction/Introduction';\nimport NavBar from '../components/Navbar/Navbar';\nimport Projects from '../components/Projects/Projects';\nimport Skills from '../components/Skills/Skills';\n\nexport const App = (): React.ReactElement => (\n  <ChakraProvider theme={theme}>\n    <Box textAlign=\"center\" fontSize=\"xl\">\n      <NavBar />\n      {/* <Grid p={3}> */}\n      <VStack spacing={8}>\n        <Introduction />\n        <CentreDiv />\n        <Projects />\n        <Skills />\n        <Contact />\n      </VStack>\n      {/* </Grid> */}\n    </Box>\n  </ChakraProvider>\n);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}